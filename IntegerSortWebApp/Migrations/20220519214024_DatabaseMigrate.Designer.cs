// <auto-generated />
using IntegerSortWebApp.App_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegerSortWebApp.Migrations
{
    [DbContext(typeof(IntegerSortDBContext))]
    [Migration("20220519214024_DatabaseMigrate")]
    partial class DatabaseMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IntegerSortWebApp.Models.Number", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Integer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("IntegerSortWebApp.Models.SortPerformance", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("SortOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SortTime")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("SortPerformance");
                });

            modelBuilder.Entity("IntegerSortWebApp.Models.SortPerformance", b =>
                {
                    b.HasOne("IntegerSortWebApp.Models.Number", "Number")
                        .WithOne("SortPerformance")
                        .HasForeignKey("IntegerSortWebApp.Models.SortPerformance", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Number");
                });

            modelBuilder.Entity("IntegerSortWebApp.Models.Number", b =>
                {
                    b.Navigation("SortPerformance")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
